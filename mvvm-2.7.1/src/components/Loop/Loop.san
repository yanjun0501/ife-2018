<template>
<div class="loop">
  <button on-click="add">添加</button>
  <table>
    <tr>
      <th>姓名</th>
      <th>审核状态</th>
      <th>操作</th>
    </tr>
    <tr s-for="item, index in values" >
      <td>{{ item.name }}</td>
      <td>{{ item.status }}</td>
      <td><button s-if="item.method === '审核' "  on-click="checkout(index)" >{{ item.method }}</button>
      <<button s-else  on-click="delete(index)" >{{ item.method }}</button></td>
    </tr>
  </table>
  <sm-dialog open="{=open=}" >
    <div class="demo-dialog-title" slot="title">
      添加新成员
    </div>
    <div>
      <input placeholder="请输入姓名" on-change="changeinput($event)" value="" />
    </div>
    <div slot="actions">
      <button on-click="closeDialog">关闭</button>
      <button on-click="addmember">添加</button>
    </div>
  </sm-dialog>
  <sm-dialog open="{=openstatus=}" >
    <div class="demo-dialog-title" slot="title">
      审核
    </div>
    <div>
      <input placeholder="请输入合格or不合格" on-change="changestatus($event)"  value=""/>
    </div>
    <div slot="actions">
      <button on-click="closeDialogStatus">关闭</button>
      <button on-click="okstatus">确认</button>
    </div>
  </sm-dialog>
</div>
</template>

<script>

import san, {DataTypes} from 'san';
import {Dialog, Radio} from 'san-mui';
import 'san-mui/lib/index.css';

let AddCategoryDialog = san.defineComponent({
    template: '<div></div>',

    components: {

    },

    initData() {
      return {
      };
    },
});

export default {

  components: {
      // 'sm-text-field': TextField,
      // 'sm-button': Button,
      // 'sm-icon': Icon
      'sm-dialog': Dialog,
      'sm-radio': Radio,
  },
  initData() {
    return {
      input: '',
      status: '合格',
      index: '',
      open: false,
      openstatus: false,
      values: [
        {
          name: '张三',
          status: '合格',
          method: '删除'
        },
        {
          name: '李四',
          status: '待审核',
          method: '审核'
        },
      ]
    };
  },
  dataTypes: {
    namevalue: DataTypes.string,
    agevalue: DataTypes.number,
    detailvalue: DataTypes.string
  },
  filters: {
    dataFormat: function (value) {
      if ( value === 0) {
        return ''
      }
      else 
        return value
    }
  },
  add (){
    this.data.set('open', true)
  },
  addmember (){
    this.data.push('values', {
      name: this.data.raw.input,
      status: '待审核',
      method: '审核'
    })
    this.data.set('input', '')
    this.data.set('open', false)
  },
  closeDialog (){
    this.data.set('input', '')
    this.data.set('open', false)

  },
  closeDialogStatus (){
    this.data.set('status', '')
    this.data.set('openstatus', false)
  },
  okstatus (){
    // let index = this.data.raw.index
    // let name = this.data.raw.values[index].name
    // console.log('xx',index)
    // this.data.splice('values',[index, 1,  {
    //   name: name,
    //   status: this.data.raw.status,
    //   method: '删除'
    // }])
    this.data.set('status', '')
    this.data.set('openstatus', false)
  },
  changeinput (e){
    this.data.set('input', e.target.value)
  },
  changestatus (e){
    // this.data.set('status', e.target.value)
    let index = this.data.raw.index
    let name = this.data.raw.values[index].name
    this.data.splice('values',[index, 1,  {
      name: name,
      status: e.target.value,
      method: '删除'
    }])
    console.log(this.data)
  },
  checkout (index){
    this.data.set('index', index)
    this.data.set('openstatus', true)
  },
  delete (index){
    this.data.splice('values', [index, 1])
  },
  computed: {
    todo() {

      return {

      };
    },
  },
  attached() {
    this.data.set('status','ok')
  },
  created() {
    // let id = this.data.get('route.query.id');
    // if (id) {
    //     this.data.set('id', +id);
    // }

    // this.updateCategories();
  },

  disposed() {
  }
}

</script>

<style>
table {
  border-collapse: collapse;
  border-spacing: 0px;
}
table, th, td {
  padding: 5px;
  border: 1px solid black;
}
</style>
