{"version":3,"sources":["webpack://[name]/./node_modules/san/dist/san.dev.js","webpack://[name]/./node_modules/san-transition/dist/index.js","webpack://[name]/./node_modules/san-router/dist/san-router.source.js"],"names":["root","guidIndex","guidPrefix","Date","getTime","toString","slice","guid","empty","extend","target","source","key","hasOwnProperty","value","inherits","subClass","superClass","subClassProto","prototype","F","Function","constructor","each","array","iterator","length","i","l","bind","func","thisArg","nativeBind","Array","apply","call","arguments","args","concat","on","el","eventName","listener","capture","addEventListener","attachEvent","splitStr2Obj","result","split","svgTags","createEl","tagName","document","createElementNS","createElement","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","Promise","test","nextTick","fn","push","tasks","setImmediate","MessageChannel","channel","port","port2","port1","onmessage","postMessage","resolve","then","setTimeout","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","obj","nodeType","Object","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","data","dataName","componentName","fullDataName","dataValue","dataType","Error","createPrimaryTypeChecker","type","DataTypes","Walker","this","len","index","createANode","options","textExpr","directives","props","events","children","kebab2camel","replace","alpha","toUpperCase","any","object","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","name","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","join","oneOfType","expectedEnumOfTypeValues","e","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","readEqualityExpr","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readString","readNumber","readParenthesizedExpr","readMultiplicativeExpr","readAdditiveExpr","parseExpr","_typeof","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","regexpLiteral","c","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","item","ref","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","indexOf","colonIndex","modifier","parser","parseDirective","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","encodeURIComponent","_class","_style","_sep","sep","evalExpr","owner","dataCache","get","leftValue","rightValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","id","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","Math","max","filterResult","DataChangeType","lifeCycleOwnIs","LifeCycle","compiled","is","inited","painting","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","scope","bindChecked","hintExpr","analInputCheckedState","option","parentSelect","parent","selectValue","isOptionSelected","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","listeners","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","window","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","hotTags","isBrowser","insertBefore","targetEl","parentEl","beforeEl","appendChild","warnSetHTML","noSetHTML","message","console","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","content","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","genElementChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newList","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","removeEventListener","detachEvent","emitDevtool","arg","debug","__san_devtool__","emit","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","componentPreheat","protoANode","givenNamedSlotBinds","binds","stumpMatch","stumpText","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","createDataTypesChecker","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","elementTraversal","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","dataExpr","san","version","exports","module","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","t","self","r","n","o","m","d","defineProperty","configurable","enumerable","__esModule","default","p","s","map","parseFloat","getTimeout","getComputedStyle","transitionDuration","transitionDelay","animationDuration","animationDelay","afterNextFrame","requestAnimationFrame","addHook","classList","add","removeHook","eval","beforeEnter","beforeLeave","u","parentElement","parse","task","makeRequestCallFromTimer","onerror","clearTimeout","clearInterval","setInterval","f","MutationObserver","WebKitMutationObserver","observe","characterData","requestFlush","raf","factory","modules","installedModules","__webpack_require__","moduleId","getter","property","base","sourceLoc","_parseUrl2","baseLoc","sourcePath","sourceSegs","baseSegs","queryString","_parseUrl","hash","params","query","hashStart","queryStart","forEach","querySeg","equalIndex","decodeURIComponent","EventTarget","instance","Constructor","TypeError","_classCallCheck","_eventListeners","_main","_resolveUrl","_resolveUrl2","clicker","href","router","locator","redirect","preventDefault","mode","_eventTarget2","_interopRequireDefault","getLocation","location","Locator","_EventTarget","_this","ReferenceError","_typeof2","_possibleConstructorReturn","referrer","hashChangeHandler","create","writable","setPrototypeOf","__proto__","_inherits","stop","isChanged","reload","pathname","search","popstateHandler","history","pushState","isSupport","Link","Router","_hash2","_html2","_link2","_elementSelector2","routeID","C","_type","_ref$mode","routes","routeAlives","locatorRedirectHandler","routeItem","_i","rule","keys","config","listenerEvent","resume","suspend","doNext","routeAction","doRoute","component","setMode","_this2","isUpdateAlive","routeAlive","attachCmpt","Cmpt","handler","_config$target","regText","isStarted","restart","Symbol","selector","querySelector","getElementById"],"mappings":"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","file":"san.min.js","sourcesContent":["/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            value: decodeHTML(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\nfunction decodeHTML(source) {\n    return source\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&quot;/g, '\\\"')\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&amp;/g, '&');\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstChild = this.el.firstChild;\n        if (firstChild && firstChild.nodeType === 8) {\n            var stumpMatch = firstChild.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                removeEl(firstChild);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         var value = aNode.textExpr.value;\n//         if (value == null) {\n//             sourceBuffer.joinExpr(aNode.textExpr);\n//         }\n//         else {\n//             sourceBuffer.joinString(value);\n//         }\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.6';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.6',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.sanTransition=t():e.sanTransition=t()}(\"undefined\"!=typeof self?self:this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=2)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(e,t){return Math.max.apply(void 0,e.map(function(e,n){return o(e)+parseFloat(t[n])}))},o=function(e){return 1e3*(parseFloat(e)||0)};t.getTimeout=function(e){var t=getComputedStyle(e),n=t.transitionDuration.split(\",\"),o=t.transitionDelay.split(\",\"),i=t.animationDuration.split(\",\"),a=t.animationDelay.split(\",\");return Math.max(r(n,o),r(i,a))},t.afterNextFrame=function(e){return requestAnimationFrame(function(){return requestAnimationFrame(e)})},t.addHook=function(e,t){return e.classList.add(t)},t.removeHook=function(e,t){return e.classList.remove(t)}},function(e,t){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\")}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n},function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var o=n(3);Object.defineProperty(t,\"transition\",{enumerable:!0,get:function(){return r(o).default}})},function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var o=n(0),i=n(4),a=r(i),u=n(7),l=r(u);t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"san\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={beforeEnter:e+\"-before-enter\",enter:e+\"-enter\",beforeLeave:e+\"-before-leave\",leave:e+\"-leave\"};return{enter:function(e,r){if(!l.default)return r();(0,o.addHook)(e,n.beforeEnter);var i=function(){(0,o.removeHook)(e,n.beforeEnter),(0,o.addHook)(e,n.enter),setTimeout(function(){(0,o.removeHook)(e,n.enter),r()},(0,o.getTimeout)(e))};(0,a.default)(e,t,i)},leave:function(e,r){if(!l.default)return r();(0,o.addHook)(e,n.beforeLeave);var i=function(){(0,o.removeHook)(e,n.beforeLeave),(0,o.addHook)(e,n.leave),setTimeout(r,(0,o.getTimeout)(e))};(0,a.default)(e,t,i)}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t,n,r){if(t){var u=e.parentElement;if(!u)return console.warn(\"Transition with stagger needs a parent element.\"),n();u.id||(u.id=\"__san_transition_\"+Date.parse(new Date));var l=u.id;a[l]=a[l]||[],a[l].push(e.id),(0,o.default)(function(){a[l]=[]}),function(e){setTimeout(function(){return(0,i.afterNextFrame)(n)},t*e)}(a[l].length-1)}else(0,i.afterNextFrame)(n)};var r=n(5),o=function(e){return e&&e.__esModule?e:{default:e}}(r),i=n(0),a={}},function(e,t,n){\"use strict\";function r(){if(l.length)throw l.shift()}function o(e){var t;t=u.length?u.pop():new i,t.task=e,a(t)}function i(){this.task=null}var a=n(6),u=[],l=[],s=a.makeRequestCallFromTimer(r);e.exports=o,i.prototype.call=function(){try{this.task.call()}catch(e){o.onerror?o.onerror(e):(l.push(e),s())}finally{this.task=null,u[u.length]=this}}},function(e,t,n){\"use strict\";(function(t){function n(e){a.length||(i(),u=!0),a[a.length]=e}function r(){for(;l<a.length;){var e=l;if(l+=1,a[e].call(),l>s){for(var t=0,n=a.length-l;t<n;t++)a[t]=a[t+l];a.length-=l,l=0}}a.length=0,l=0,u=!1}function o(e){return function(){function t(){clearTimeout(n),clearInterval(r),e()}var n=setTimeout(t,0),r=setInterval(t,50)}}e.exports=n;var i,a=[],u=!1,l=0,s=1024,f=void 0!==t?t:self,c=f.MutationObserver||f.WebKitMutationObserver;i=\"function\"==typeof c?function(e){var t=1,n=new c(e),r=document.createTextNode(\"\");return n.observe(r,{characterData:!0}),function(){t=-t,r.data=t}}(r):o(r),n.requestFlush=i,n.makeRequestCallFromTimer=o}).call(t,n(1))},function(e,t,n){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n={raf:e.requestAnimationFrame,getComputedStyle:e.getComputedStyle,classList:document.createElement(\"a\").classList};n.getComputedStyle||console.warn(\"`san-transition` will not to work because `getComputedStyle` API or polyfill is required.\"),n.raf||console.warn(\"`san-transition` will not to work because `requestAnimationFrame` API or polyfill is required.\"),n.classList||console.warn(\"`san-transition` will not to work because `Element.prototype.classList` API or polyfill is required.\"),t.default=n.raf&&n.classList}).call(t,n(1))}])});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"san-router\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"san-router\"] = factory();\n\telse\n\t\troot[\"san-router\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = resolveURL;\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * 将 URL 中相对路径部分展开\n *\n * @param {string} source 要展开的url\n * @param {string} base 当前所属环境的url\n * @return {string}\n */\nfunction resolveURL(source, base) {\n    var sourceLoc = (0, _parseUrl2['default'])(source);\n    var baseLoc = (0, _parseUrl2['default'])(base);\n\n    var sourcePath = sourceLoc.path;\n    if (sourcePath.indexOf('/') === 0) {\n        return source;\n    }\n\n    var sourceSegs = sourcePath.split('/');\n    var baseSegs = baseLoc.path.split('/');\n    baseSegs.pop();\n\n    for (var i = 0; i < sourceSegs.length; i++) {\n        var seg = sourceSegs[i];\n        switch (seg) {\n            case '..':\n                baseSegs.pop();\n                break;\n            case '.':\n                break;\n            default:\n                baseSegs.push(seg);\n        }\n    }\n\n    if (baseSegs[0] !== '') {\n        baseSegs.unshift('');\n    }\n\n    return baseSegs.join('/') + (sourceLoc.queryString ? '?' + sourceLoc.queryString : '');\n} /**\n   * san-router\n   * Copyright 2017 Baidu Inc. All rights reserved.\n   *\n   * @file 将 URL 中相对路径部分展开\n   * @author errorrik\n   */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = parseURL;\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 解析URL\n * @author errorrik\n */\n\n/**\n * 解析URL，返回包含path、query、queryString的对象\n *\n * @param {string} url 要解析的url\n * @return {Object}\n */\nfunction parseURL(url) {\n    var result = {\n        hash: '',\n        queryString: '',\n        params: {},\n        query: {},\n        path: url\n    };\n\n    // parse hash\n    var hashStart = result.path.indexOf('#');\n    if (hashStart >= 0) {\n        result.hash = result.path.slice(hashStart + 1);\n        result.path = result.path.slice(0, hashStart);\n    }\n\n    // parse query\n    var query = result.query;\n    var queryStart = result.path.indexOf('?');\n    if (queryStart >= 0) {\n        result.queryString = result.path.slice(queryStart + 1);\n        result.path = result.path.slice(0, queryStart);\n\n        result.queryString.split('&').forEach(function (querySeg) {\n            // 考虑到有可能因为未处理转义问题，\n            // 导致value中存在**=**字符，因此不使用`split`函数\n            var equalIndex = querySeg.indexOf('=');\n            var value = '';\n            if (equalIndex > 0) {\n                value = querySeg.slice(equalIndex + 1);\n                querySeg = querySeg.slice(0, equalIndex);\n            }\n\n            var key = decodeURIComponent(querySeg);\n            value = decodeURIComponent(value);\n\n            // 已经存在这个参数，且新的值不为空时，把原来的值变成数组\n            if (query.hasOwnProperty(key)) {\n                /* eslint-disable */\n                query[key] = [].concat(query[key], value);\n                /* eslint-disable */\n            } else {\n                query[key] = value;\n            }\n        });\n    }\n\n    return result;\n}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 提供事件相关操作的基类\n * @author otakustay, errorrik\n */\n\nvar EventTarget = function () {\n    function EventTarget() {\n        _classCallCheck(this, EventTarget);\n    }\n\n    /**\n     * 注册一个事件处理函数\n     *\n     * @param {string} type 事件的类型\n     * @param {Function | boolean} fn 事件的处理函数\n     */\n    EventTarget.prototype.on = function on(type, fn) {\n        if (typeof fn !== 'function') {\n            return;\n        }\n\n        if (!this._eventListeners) {\n            this._eventListeners = {};\n        }\n\n        if (!this._eventListeners[type]) {\n            this._eventListeners[type] = [];\n        }\n\n        this._eventListeners[type].push(fn);\n    };\n\n    /**\n     * 注销一个事件处理函数\n     *\n     * @param {string} type 事件的类型，如果值为`*`仅会注销通过`*`为类型注册的事件，并不会将所有事件注销\n     * @param {Function} [fn] 事件的处理函数，无此参数则注销`type`指定类型的所有事件处理函数\n     */\n\n\n    EventTarget.prototype.un = function un(type, fn) {\n        if (!this._eventListeners || !this._eventListeners[type]) {\n            return;\n        }\n\n        if (!fn) {\n            this._eventListeners[type] = [];\n        } else {\n            var listeners = this._eventListeners[type];\n            var len = listeners.length;\n\n            while (len--) {\n                if (listeners[len] === fn) {\n                    listeners.splice(len, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * 触发指定类型的事件\n     *\n     * @param {string} type 事件类型\n     * @param {*} [args] 事件对象\n     */\n\n\n    EventTarget.prototype.fire = function fire(type, args) {\n        if (!type) {\n            throw new Error('No event type specified');\n        }\n\n        var listeners = this._eventListeners && this._eventListeners[type];\n        if (listeners) {\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i](args);\n            }\n        }\n    };\n\n    return EventTarget;\n}();\n\nexports['default'] = EventTarget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _main = __webpack_require__(6);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 路由链接的 San 组件\n * @author errorrik\n */\n\nexports['default'] = {\n    template: '<a href=\"{{href}}\"\\n        onclick=\"return false;\"\\n        on-click=\"clicker($event)\"\\n        target=\"{{target}}\"\\n        class=\"{{class}}\"\\n        style=\"{{style}}\"\\n        >\\n        <slot></slot>\\n    </a>',\n\n    clicker: function clicker(e) {\n        var href = this.data.get('href');\n\n        if (typeof href === 'string') {\n            _main.router.locator.redirect(href.replace(/^#/, ''));\n        }\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    },\n\n\n    computed: {\n        href: function href() {\n            var url = this.data.get('to');\n            if (typeof url !== 'string') {\n                return;\n            }\n\n            var href = (0, _resolveUrl2['default'])(url, _main.router.locator.current);\n            if (_main.router.mode === 'hash') {\n                href = '#' + href;\n            }\n\n            return href;\n        }\n    }\n};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file hash 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    // Firefox下`location.hash`存在自动解码的情况，\n    // 比如hash的值是**abc%3def**，\n    // 在Firefox下获取会成为**abc=def**\n    // 为了避免这一情况，需要从`location.href`中分解\n    var index = location.href.indexOf('#');\n    var url = index < 0 ? '/' : location.href.slice(index + 1) || '/';\n\n    return url;\n}\n\n/**\n * hash 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.hashChangeHandler = function () {\n            _this.redirect(getLocation());\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        if (window.addEventListener) {\n            window.addEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        if (window.removeEventListener) {\n            window.removeEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n            location.hash = url;\n        } else {\n            referrer = this.referrer;\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.redirect(this.current, { force: true });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    return location.pathname + location.search;\n}\n\n/**\n * html5 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.popstateHandler = function () {\n            _this.referrer = _this.current;\n            _this.current = getLocation();\n\n            _this.fire('redirect', {\n                url: _this.current,\n                referrer: _this.referrer\n            });\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        window.addEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        window.removeEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n\n            history.pushState({}, '', url);\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.fire('redirect', {\n            url: this.current,\n            referrer: this.referrer\n        });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n\nLocator.isSupport = 'pushState' in window.history;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.Link = exports.router = exports.Router = exports.version = undefined;\n\nvar _hash = __webpack_require__(4);\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nvar _html = __webpack_require__(5);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nvar _link = __webpack_require__(3);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _elementSelector = __webpack_require__(7);\n\nvar _elementSelector2 = _interopRequireDefault(_elementSelector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * san-router\n                                                                                                                                                           * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                           *\n                                                                                                                                                           * @file 主模块\n                                                                                                                                                           * @author errorrik\n                                                                                                                                                           */\n\nvar routeID = 0x5942b;\nvar guid = function guid() {\n    return (++routeID).toString();\n};\n\nfunction isComponent(C) {\n    return C.prototype && (C.prototype.nodeType === 5 || C.prototype._type === 'san-cmpt');\n}\n\n/**\n * 版本号\n *\n * @type {string}\n */\nvar version = exports.version = '1.2.0';\n\n/**\n * 路由器类\n *\n * @class\n */\n\nvar Router = exports.Router = function () {\n\n    /**\n     * 构造函数\n     *\n     * @param {Object?} options 初始化参数\n     * @param {string?} options.mode 路由模式，hash | html5\n     */\n    function Router() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$mode = _ref.mode,\n            mode = _ref$mode === undefined ? 'hash' : _ref$mode;\n\n        _classCallCheck(this, Router);\n\n        this.routes = [];\n        this.routeAlives = [];\n        this.listeners = [];\n\n        /**\n         * locator redirect 事件监听函数\n         *\n         * @param {Object} e locator事件对象\n         */\n        this.locatorRedirectHandler = function (e) {\n            var url = (0, _parseUrl2['default'])(e.url);\n            var routeItem = void 0;\n\n            for (var _i = 0; _i < _this.routes.length; _i++) {\n                var item = _this.routes[_i];\n                var match = item.rule.exec(url.path);\n\n                if (match) {\n                    routeItem = item;\n\n                    // fill params\n                    var keys = item.keys || [];\n                    for (var j = 1; j < match.length; j++) {\n                        var key = keys[j] || j;\n                        var value = match[j];\n                        url.query[key] = value;\n                        url.params[key] = value;\n                    }\n\n                    // fill referrer\n                    url.referrer = e.referrer;\n                    url.config = item.config;\n\n                    break;\n                }\n            }\n\n            var i = 0;\n            var state = 1;\n\n            /**\n             * listener 事件对象\n             *\n             * @type {Object}\n             */\n            var listenerEvent = {\n                hash: url.hash,\n                queryString: url.queryString,\n                query: url.query,\n                path: url.path,\n                referrer: url.referrer,\n                config: url.config,\n                resume: next,\n                suspend: function suspend() {\n                    state = 0;\n                },\n                stop: function stop() {\n                    state = -1;\n                }\n            };\n\n            /**\n             * 尝试运行下一个listener\n             *\n             * @inner\n             */\n            var doNext = function doNext() {\n                if (state > 0) {\n                    if (i < _this.listeners.length) {\n                        _this.listeners[i].call(_this, listenerEvent, url.config);\n                        if (state > 0) {\n                            next();\n                        }\n                    } else {\n                        routeAction();\n                    }\n                }\n            };\n\n            /**\n             * 运行下一个listener\n             *\n             * @inner\n             */\n            function next() {\n                state = 1;\n                i++;\n                doNext();\n            }\n\n            /**\n             * 运行路由行为\n             *\n             * @inner\n             */\n            var routeAction = function routeAction() {\n                if (routeItem) {\n                    _this.doRoute(routeItem, url);\n                } else {\n                    var len = _this.routeAlives.length;\n                    while (len--) {\n                        _this.routeAlives[len].component.dispose();\n                        _this.routeAlives.splice(len, 1);\n                    }\n                }\n            };\n\n            doNext();\n        };\n\n        this.setMode(mode);\n    }\n\n    /**\n     * 添加路由监听器\n     *\n     * @param {function(e, config)} listener 监听器\n     */\n\n\n    Router.prototype.listen = function listen(listener) {\n        this.listeners.push(listener);\n    };\n\n    /**\n     * 移除路由监听器\n     *\n     * @param {Function} listener 监听器\n     */\n\n\n    Router.prototype.unlisten = function unlisten(listener) {\n        var len = this.listeners.length;\n        while (len--) {\n            if (this.listeners[len] === listener) {\n                this.listeners.splice(len, 1);\n            }\n        }\n    };\n\n    /**\n     * 执行路由\n     *\n     * @private\n     * @param {Object} routeItem 路由项\n     * @param {Object} e 路由信息\n     */\n\n\n    Router.prototype.doRoute = function doRoute(routeItem, e) {\n        var _this2 = this;\n\n        var isUpdateAlive = false;\n        var len = this.routeAlives.length;\n\n        while (len--) {\n            var routeAlive = this.routeAlives[len];\n\n            if (routeAlive.id === routeItem.id) {\n                routeAlive.component.data.set('route', e);\n                routeAlive.component._callHook('route');\n                isUpdateAlive = true;\n            } else {\n                routeAlive.component.dispose();\n                this.routeAlives.splice(len, 1);\n            }\n        }\n\n        if (!isUpdateAlive) {\n            if (routeItem.Component) {\n                if (isComponent(routeItem.Component)) {\n                    this.attachCmpt(routeItem, e);\n                } else {\n                    routeItem.Component().then(function (Cmpt) {\n                        // eslint-disable-line\n                        if (isComponent(Cmpt)) {\n                            routeItem.Component = Cmpt;\n                        } else if (Cmpt.__esModule && isComponent(Cmpt['default'])) {\n                            routeItem.Component = Cmpt['default'];\n                        }\n                        _this2.attachCmpt(routeItem, e);\n                    });\n                }\n            } else {\n                routeItem.handler.call(this, e);\n            }\n        }\n    };\n\n    Router.prototype.attachCmpt = function attachCmpt(routeItem, e) {\n        var component = new routeItem.Component();\n        component.data.set('route', e);\n        component._callHook('route');\n\n        var target = routeItem.target;\n        var targetEl = (0, _elementSelector2['default'])(target);\n\n        if (!targetEl) {\n            throw new Error('[SAN-ROUTER ERROR] ' + 'Attach failed, target element \"' + routeItem.target + '\" is not found.');\n        }\n\n        component.attach(targetEl);\n\n        this.routeAlives.push({\n            component: component,\n            id: routeItem.id\n        });\n    };\n\n    /**\n     * 添加路由项\n     * 当规则匹配时，路由将优先将Component渲染到target中。如果没有包含Component，则执行handler函数\n     *\n     * @private\n     * @param {Object} config 路由项配置\n     * @param {string|RegExp} config.rule 路由规则\n     * @param {Function?} config.handler 路由函数\n     * @param {Function?} config.Component 路由组件\n     * @param {string} config.target 路由组件要渲染到的目标位置\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.add = function add(config) {\n        var rule = config.rule,\n            handler = config.handler,\n            _config$target = config.target,\n            target = _config$target === undefined ? '#main' : _config$target,\n            Component = config.Component;\n\n        var keys = [''];\n\n        if (typeof rule === 'string') {\n            // 没用path-to-regexp，暂时不提供这么多功能支持\n            var regText = rule.replace(/\\/:([a-z0-9_-]+)(?=\\/|$)/ig, function (match, key) {\n                keys.push(key);\n                return '/([^/\\\\s]+)';\n            });\n\n            rule = new RegExp('^' + regText + '$', 'i');\n        }\n\n        if (!(rule instanceof RegExp)) {\n            throw new Error('[SAN-ROUTER ERROR] Rule must be string or RegExp!');\n        }\n\n        var id = guid();\n        this.routes.push({ id: id, rule: rule, handler: handler, keys: keys, target: target, Component: Component, config: config });\n\n        return this;\n    };\n\n    /**\n     * 启动路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.start = function start() {\n        if (!this.isStarted) {\n            this.isStarted = true;\n            this.locator.on('redirect', this.locatorRedirectHandler);\n            this.locator.start();\n            this.locator.reload();\n        }\n\n        return this;\n    };\n\n    /**\n     * 停止路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.stop = function stop() {\n        this.locator.un('redirect', this.locatorRedirectHandler);\n        this.locator.stop();\n        this.isStarted = false;\n\n        return this;\n    };\n\n    /**\n     * 设置路由模式\n     *\n     * @param {string} mode 路由模式，hash | html5\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.setMode = function setMode(mode) {\n        mode = mode.toLowerCase();\n        if (this.mode === mode) {\n            return;\n        }\n\n        this.mode = mode;\n\n        var restart = false;\n        if (this.isStarted) {\n            this.stop();\n            restart = true;\n        }\n\n        switch (mode) {\n            case 'hash':\n                this.locator = new _hash2['default']();\n                break;\n            case 'html5':\n                this.locator = new _html2['default']();\n        }\n\n        if (restart) {\n            this.start();\n        }\n\n        return this;\n    };\n\n    return Router;\n}();\n\n/**\n * 默认的路由器实例\n *\n * @type {Router}\n */\n\n\nvar router = exports.router = new Router();\n\n/**\n * 路由链接的 San 组件\n *\n * @class\n */\nexports.Link = _link2['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = elementSelector;\n/*\n*\n* @file 选择器\n* @author vincent lau/413893093@qq.com\n*/\n\n/**\n * 元素选择器\n *\n * @param {string|Element} selector 选择器\n * @returns {Element}\n */\nfunction elementSelector(selector) {\n    switch (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) {\n        case 'object':\n            return selector;\n\n        case 'string':\n            if (document.querySelector) {\n                return document.querySelector(selector);\n            }\n\n            return document.getElementById(selector.replace(/#/i, ''));\n    }\n}\n\n/***/ }\n/******/ ]);\n});"],"sourceRoot":""}